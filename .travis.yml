language: minimal
sudo: required
services:
  - docker

branches:
  only:
    - master

env:
  global:
    - REPOSITORY="${DOCKER_USERNAME}"
    - TOOLS_TO_BUILD=""
    - CHANNELS_TO_BUILD=""
    - PATH=$HOME/.local/bin:$PATH # awscli

before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce

stages:
  - name: build compiler containers
    if: type != pull_request AND branch == master
  - name: build tools
    if: type != pull_request AND branch == master
  - name: compile code

jobs:
  allow_failures:
    - env:
        - TOOLS_TO_BUILD="rustfmt"
    - env:
        - TOOLS_TO_BUILD="clippy"
    - env:
        - TOOLS_TO_BUILD="miri"
  include:
    - stage: build compiler containers
      env:
        - CHANNELS_TO_BUILD="stable"
      script: ./.travis/build-containers.sh
    - env:
        - CHANNELS_TO_BUILD="beta"
      script: ./.travis/build-containers.sh
    - env:
        - CHANNELS_TO_BUILD="nightly"
      script: ./.travis/build-containers.sh

    - stage: build tools
      env:
        - TOOLS_TO_BUILD="rustfmt"
      script: ./.travis/build-containers.sh
    - env:
        - TOOLS_TO_BUILD="clippy"
      script: ./.travis/build-containers.sh
    - env:
        - TOOLS_TO_BUILD="miri"
      script: ./.travis/build-containers.sh

    - stage: compile code
      env:
        - BUILDING="backend"
      before_install: &prep_cache
       - >
         mkdir -p
         $HOME/cache/rust/cargo/{git,registry}
         $HOME/cache/rust/target
         $HOME/cache/node/node_modules
         $HOME/cache/node/yarn-cache
       - pip install --user awscli
      script: ./.travis/compile-backend.sh
      before_cache: &clean_cache
        # Ignore the permissions set from running inside the container
        - sudo chmod -R a+rw $HOME/cache
      after_success:
        - ./.travis/upload-compiled-artifacts.sh
      cache: &cache_build
        directories:
          - $HOME/cache
    - env:
      - BUILDING="frontend"
      before_install: *prep_cache
      script: ./.travis/compile-frontend.sh
      before_cache: *clean_cache
      after_success:
        - ./.travis/upload-compiled-artifacts.sh
      cache: *cache_build
